aliases:
  default: &default
    docker:
      - image: circleci/node:11

  edge_build_image: &edge_build_image
    docker:
      - image: heathmont/sportsbet-build-image:develop
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

  install_deps: &install_deps
    run:
      name: 'Installing dependencies and creating symlinks'
      command: yarn install --ignore-scripts

  restore_cache: &restore_cache
    restore_cache:
      name: 'Restoring cache'
      keys:
        - project-deps-v3-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "yarn.lock" }}-{{ .Revision }}
        - project-deps-v3-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "yarn.lock" }}
        - project-deps-v3-{{ .Environment.CIRCLE_PROJECT_REPONAME }}

  save_cache: &save_cache
    save_cache:
      name: 'Saving cache'
      key: project-deps-v3-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "yarn.lock" }}-{{ .Revision }}
      paths:
        - node_modules
        - design/*/node_modules/*
        - docs/node_modules/*

  install_token: &install_token
    run:
      name: 'Setting up private repository NPM access'
      command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

  docker_build_docs_branch: &docker_build_docs_branch
    run:
      name: 'Building docker docs image from branch'
      command: docker build -f .config/docker/docs/Dockerfile -t heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH .

  docker_build_assets_branch: &docker_build_assets_branch
    run:
      name: 'Building docker assets image from branch'
      command: docker build -f .config/docker/assets/Dockerfile -t heathmont/sportsbet-assets:$CIRCLE_BRANCH .

  docker_pull_master_image: &docker_pull_master_image
    run:
      name: 'Pull master image'
      command: docker pull heathmont/$CIRCLE_PROJECT_REPONAME:master

  docker_tag_master_image: &docker_tag_master_image
    run:
      name: 'Tag master image with tag'
      command: docker tag heathmont/$CIRCLE_PROJECT_REPONAME:master heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

  docker_push_tag: &docker_push_tag
    run:
      name: 'Pushing docker image with tag'
      command: docker push heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

  docker_pull_user_portal_master_image: &docker_pull_user_portal_master_image
    run:
      name: 'Pull user portal master image'
      command: docker pull heathmont/sportsbet-user-portal:master

  docker_tag_user_portal_master_image: &docker_tag_user_portal_master_image
    run:
      name: 'Tag user portal master image with tag'
      command: docker tag heathmont/sportsbet-user-portal:master heathmont/sportsbet-user-portal:$CIRCLE_TAG

  docker_user_portal_push_tag: &docker_user_portal_push_tag
    run:
      name: 'Pushing user portal docker image with tag'
      command: docker push heathmont/sportsbet-user-portal:$CIRCLE_TAG

  docker_pull_assets_master_image: &docker_pull_assets_master_image
    run:
      name: 'Pull assets master image'
      command: docker pull heathmont/sportsbet-assets:master

  docker_tag_assets_master_image: &docker_tag_assets_master_image
    run:
      name: 'Tag assets master image with tag'
      command: docker tag heathmont/sportsbet-assets:master heathmont/sportsbet-assets:$CIRCLE_TAG

  docker_assets_push_tag: &docker_assets_push_tag
    run:
      name: 'Pushing assets docker image with tag'
      command: docker push heathmont/sportsbet-assets:$CIRCLE_TAG

  docker_login: &docker_login
    run:
      name: 'Logging into docker'
      command: docker login -u $DOCKER_USER -p $DOCKER_PASS

  docker_push_docs_branch: &docker_push_docs_branch
    run:
      name: 'Pushing docker docs image with branch name'
      command: docker push heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH

  docker_push_assets_branch: &docker_push_assets_branch
    run:
      name: 'Pushing docker assets image with branch name'
      command: docker push heathmont/sportsbet-assets:$CIRCLE_BRANCH

  notify_on_slack: &notify_on_slack
    run:
      name: 'Notify on slack on success'
      command: |
        bash -c "curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ \
                   \"slackHook\": \"$SPORTSBET_SLACK_HOOK\", \
                   \"application\": \"$CIRCLE_PROJECT_REPONAME\", \
                   \"tag\": \"$CIRCLE_TAG\", \
                   \"stack\": \"sportsbet\", \
                   \"autoReleaseBranch\": \"sportsbet-auto-release\" \
                 }' 'https://lexa.testenv.io/announce/docker-image'"

  setup_github_ssh: &setup_github_ssh
    run:
      name: 'Setting up github SSH key'
      command: |
        mkdir -p ~/.ssh
        echo "$ROBOT_SSH_KEY" | base64 -d > ~/.ssh/id_rsa.robot && chmod 600 ~/.ssh/id_rsa.robot && ssh-add ~/.ssh/id_rsa.robot
        echo -e "Host github.com\n Hostname github.com\n IdentityFile ~/.ssh/id_rsa.robot\n IdentitiesOnly yes" > ~/.ssh/config
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts

  setup_git_config: &setup_git_config
    run:
      name: 'Setting up git config'
      command: |
        git config user.email "circleci@coingaming.io"
        git config user.name "Deployment Robot"
        git config --global push.default matching

version: 2
jobs:
  dependencies:
    <<: *default
    steps:
      - checkout
      - *restore_cache
      - *install_token
      - *install_deps
      - *save_cache
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules
            - docs/node_modules/*
            - design/*/node_modules/*
            - portals/*/node_modules/*

  lint:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: yarn lint

  test:
    <<: *default
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: yarn test

  bundlesize:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: yarn bundlesize

  build:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Running typescript build
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - design/*/lib/*

  build_site:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Preparing static assets
          command: yarn docs:assets
      - run:
          name: Running docs build
          command: yarn docs:build
      - persist_to_workspace:
          root: ./
          paths:
            - docs/public

  build_portals:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: 'Build portal dist folders'
          command: yarn portals:build
      - persist_to_workspace:
          root: ./
          paths:
            - portals/*/dist/*

  build_portals_and_push:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker
      - *docker_login
      - run:
          name: 'Build user portal docker image'
          command: docker build -f ./portals/user-portal/.config/docker/Dockerfile -t heathmont/sportsbet-user-portal:$CIRCLE_BRANCH ./portals/user-portal
      - run:
          name: 'Push user portal docker image'
          command: docker push heathmont/sportsbet-user-portal:$CIRCLE_BRANCH

  build_docs_and_push:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker
      - *docker_build_docs_branch
      - *docker_login
      - *docker_push_docs_branch

  build_assets_and_push:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker
      - *docker_build_assets_branch
      - *docker_login
      - *docker_push_assets_branch

  tag_master_image:
    <<: *default
    steps:
      - setup_remote_docker
      - *docker_login
      - *docker_pull_master_image
      - *docker_tag_master_image
      - *docker_push_tag
      - *docker_pull_user_portal_master_image
      - *docker_tag_user_portal_master_image
      - *docker_user_portal_push_tag
      - *docker_pull_assets_master_image
      - *docker_tag_assets_master_image
      - *docker_assets_push_tag

  release_to_stacks:
    <<: *default
    steps:
      - *setup_github_ssh
      - run: git clone -b sportsbet-auto-release git@github.com:coingaming/stacks.git .
      - *setup_git_config
      - run: git branch --set-upstream-to=origin/sportsbet-auto-release sportsbet-auto-release
      - run: git pull
      - run: sed -E "s/($CIRCLE_PROJECT_REPONAME:v)([0-9.]+)/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG/g" docker-compose.sportsbet.yml > docker-compose.sportsbet.temp.yml
      - run: mv docker-compose.sportsbet.temp.yml docker-compose.sportsbet.yml
      - run: sed -E "s/(sportsbet-user-portal:v)([0-9.]+)/sportsbet-user-portal:$CIRCLE_TAG/g" docker-compose.sportsbet.yml > docker-compose.sportsbet.temp.yml
      - run: mv docker-compose.sportsbet.temp.yml docker-compose.sportsbet.yml
      - run: sed -E "s/(sportsbet-assets:v)([0-9.]+)/sportsbet-assets:$CIRCLE_TAG/g" docker-compose.sportsbet.yml > docker-compose.sportsbet.temp.yml
      - run: mv docker-compose.sportsbet.temp.yml docker-compose.sportsbet.yml
      - run: git status
      - run: git commit -a -m "Bumping $CIRCLE_PROJECT_REPONAME version to $CIRCLE_TAG"
      - run: git tag "sportsbet-auto-release-$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG"
      - run: git push
      - run: git push --tags
      - *notify_on_slack

  deploy_to_edge:
    <<: *edge_build_image
    steps:
      - setup_remote_docker
      - *docker_login
      - *setup_github_ssh
      - run: mkdir -p ~/.stacks
      - run: |
          git clone -b sportsbet-edge git@github.com:coingaming/stacks.git ~/.stacks
          ~/.stacks/scripts/circle-ci-setup
      - run: |
          DOCKER_HOST=edge-sportsbet.ci.testenv.io
          ~/.stacks/scripts/deploy-service sportsbet design heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH
      - run: |
          DOCKER_HOST=edge-sportsbet.ci.testenv.io
          ~/.stacks/scripts/deploy-service sportsbet user-portal heathmont/sportsbet-user-portal:$CIRCLE_BRANCH

  publish:
    <<: *default
    steps:
      - *setup_github_ssh
      - run: git clone -b master git@github.com:coingaming/$CIRCLE_PROJECT_REPONAME.git .
      - *setup_git_config
      - run: git branch --set-upstream-to=origin/master master
      - run: git pull
      - attach_workspace:
          at: ./
      - *install_token
      - run: yarn publish:packages
      - run:
          name: 'Update `develop` with `master`'
          command: |
            git pull
            git checkout develop
            git branch --set-upstream-to=origin/develop develop
            git pull
            git merge master
            git push

workflows:
  version: 2
  pull-request:
    jobs:
      - dependencies:
          context: global
      - build:
          context: global
          requires:
            - dependencies
      - build_portals:
          context: global
          requires:
            - build
      - lint:
          context: global
          requires:
            - dependencies
            - build
            - build_portals
      - test:
          context: global
          requires:
            - build
      - bundlesize:
          context: global
          requires:
            - build_portals

  build-branch:
    jobs:
      - dependencies:
          context: global
          filters:
            branches:
              only:
                - develop
                - master

      - build:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies

      - build_site:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - build

      - build_portals:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - build

      - lint:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - build
            - build_portals

      - test:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - build

      - bundlesize:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - build_portals

      - build_portals_and_push:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - lint
            - test
            - build_portals
            - bundlesize

      - build_assets_and_push:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - lint
            - test
            - build_portals
            - bundlesize

      - build_docs_and_push:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - lint
            - test
            - build_site
            - bundlesize

      - deploy_to_edge:
          context: global
          filters:
            branches:
              only: develop
          requires:
            - build_docs_and_push

      - publish:
          context: global
          filters:
            branches:
              only: master
          requires:
            - build_docs_and_push
            - build_portals_and_push

      - tag_master_image:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - release_to_stacks:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - tag_master_image
